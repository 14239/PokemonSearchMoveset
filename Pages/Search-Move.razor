@using SMPage.Models
@using SMPage.Services
@inject HttpClient Http

@page "/search-move"

<h3>기술 검색</h3>

<div>
    <h5>Select Game Versions:</h5>
    <div>
        @foreach (var versionGroup in VersionGroups)
        {
            string displayName = GetDisplayNameForVersionGroup(versionGroup.Id);
            <input type="checkbox" id="@versionGroup.Id" value="@versionGroup.Id" />
            <label for="@versionGroup.Id">@displayName</label><br />
        }
    </div>
</div>

<div class="mt-4">
    <h5>Search for a move:</h5>
    <input type="text" placeholder="Enter move name..." />
    <button>Search</button>
</div>

@code {
    private List<VersionGroupCSV> VersionGroups = new List<VersionGroupCSV>();
    private List<VersionCSV> Versions;
    private List<VersionNameCSV> VersionNames;

    private int CurrentLanguageId = 3;  // 한글 설정

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        Versions = await CsvLoader.LoadVersions(Http, "database/versions.csv");
        VersionNames = await CsvLoader.LoadVersionNames(Http, "database/version_names.csv");
        VersionGroups = await CsvLoader.LoadVersionGroups(Http, "database/version_groups.csv");
    }

    private string GetDisplayNameForVersionGroup(int versionGroupId)
    {
        var versionIdsInGroup = Versions.Where(v => v.VersionGroupId == versionGroupId).Select(v => v.Id);
        var displayNames = versionIdsInGroup.Select(id => VersionNames.FirstOrDefault(vn => vn.VersionId == id && vn.LocalLanguageId == CurrentLanguageId)?.Name);

        var finalDisplayName = string.Join("-", displayNames.Where(name => !string.IsNullOrEmpty(name)));

        // 만약 빈 문자열이면 VersionGroupCSV의 Identifier로 대체합니다.
        if (string.IsNullOrEmpty(finalDisplayName))
        {
            finalDisplayName = VersionGroups.FirstOrDefault(vg => vg.Id == versionGroupId)?.Identifier;
        }

        return finalDisplayName;
    }
}
